# EazyShop Products
openapi: 3.1.0
info: # EazyShop Products Info
  title: EazyShop Products APIs Definition
  summary: EazyShop Products APIs
  description: |
    # About Us
    **EazyShop** is a open market product selling company. Any website can list our products by using our _APIs_. Shipping & other logistics will be taken care by us.You will get an `Affiliate commision` for selling our products.
    # Categories supported
      - Mobiles
          - Apple
          - Samsung
          - OnePlus
      - Laptops
      - Televisions
      - Headphones
  termsOfService: https://eazyshop.com/terms/
  x-custom-info:
    comment: API Developers
    developers:
      - name: John Doe
        email: john@doe.com
      - name: Jane Doe
        email: jane@doe.com
  contact: # Contact EazyShop Products Support Team
    name: EazyShop API Support
    url: https://www.eazyshop.com/support
    email: support@eazyshop.com
  license: # EazyShop License info
    name: EazyShop License
    url: https://www.eazyshop.com/licenses/LICENSE-2.0.html
  version: 0.0.1 # EazyShop Product Version
externalDocs: # External Documentation Reference
  description: External Documentation
  url: https://example.com
servers: # List of servers where the APIs are hosted
  - url: https://development.eazyshop-server.com/v1
    description: Development server
  - url: https://staging.eazyshop-server.com/v1
    description: Staging server
  - url: https://api.eazyshop-server.com/v1
    description: Production server
  - url: https://{username}.server.com:{port}/{version}
    variables:
      username:
        default: demo
        description: |
          **This value is assigned by the service provider.**
      port:
        enum:
          - "8443"
          - "443"
        default: "8443"
      version:
        default: v1
tags:
  - name: Categories
    description: |
      *Categories-related operations*
  - name: Products
    description: |
      *Products-related operations*
  - name: Orders
    description: |
      *Orders-related operations*
security:
  - BasicAuth: []
  - BearerAuth: []
  - ApiKeyAuth: []
  - oAuth2AuthCode: [read, write, admin]
paths:
  /categories: # Categories API endpoint
    get:
      tags:
        - Categories
      summary: List all categories
      description: |
        Returns the list of categories supported by EazyShop
      operationId: getCategories
      security:
        - BasicAuth: []
      parameters:
        - $ref: "#/components/parameters/categoryIdQueryParam"
      responses:
        "200":
          description: |
            A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
              examples:
                all-categories-data:
                  summary: Categories example data
                  value:
                    - categoryId: 101
                      name: Mobiles
                    - categoryId: 102
                      name: Laptops
                    - categoryId: 103
                      name: Headphones
                    - categoryId: 104
                      name: Televisions
                single-category-data:
                  summary: Single category example data
                  value:
                    - categoryId: 101
                      name: Mobiles
        "500":
          $ref: "#/components/responses/InternalServerError"
  /categories/{categoryId}: # Category API endpoint
    get:
      tags:
        - Categories
      summary: Return category details
      description: |
        Returns the category details supported by EazyShop
      operationId: getCategoryDetails
      security: []
      parameters:
        - $ref: "#/components/parameters/categoryIdPathParam"
      responses:
        "200":
          description: |
            Return category details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
              examples:
                category-data:
                  summary: Category details
                  value:
                    categoryId: 102
                    name: Laptops
        "500":
          $ref: "#/components/responses/InternalServerError"
  /products: # Products API endpoint
    get:
      tags:
        - Products
      summary: List all products
      description: |
        Returns the list of products supported by EazyShop
      operationId: getProducts
      parameters:
        - $ref: "#/components/parameters/categoryIdQueryParam"
      responses:
        "200":
          description: |
            A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
              examples:
                products-data:
                  summary: Products example data
                  value:
                    - productId: 101
                      name: Apple IPhone 13 Pro
                      price: 999.99
                      categoryName: Mobiles
                      quantity: 96
                    - productId: 102
                      name: Samsung S22 Ultra
                      price: 899.99
                      categoryName: Mobiles
                      quantity: 121
                    - productId: 103
                      name: OnePlus 10 Pro 5G
                      price: 750.99
                      categoryName: Mobiles
                      quantity: 67
        "500":
          $ref: "#/components/responses/InternalServerError"
  /products/{productId}: # Product API endpoint
    get:
      tags:
        - Products
      summary: Get Product Details
      description: |
        Returns the product details from EazyShop
      operationId: getProductDetails
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 101
      responses:
        "200":
          description: |
            Return product details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /orders: # Orders API endpoint
    post:
      tags:
        - Orders
      summary: Create Order
      description: |
        Post order details to EazyShop for processing 
        and shipping
      operationId: saveOrderDetails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    $ref: "#/components/schemas/Product"
                address:
                  $ref: "#/components/schemas/Address"
      responses:
        "201":
          description: |
            Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
              examples:
                order-data:
                  summary: Order Id
                  value:
                    orderId: 1
          links:
            GetOrderByOrderId:
              $ref: "#/components/links/GetOrderByOrderId"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      tags:
        - Orders
      summary: Update Order
      description: |
        Update order details to EazyShop for processing 
        and shipping
      operationId: updateOrderDetails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: integer
                products:
                  type: array
                  items:
                    $ref: "#/components/schemas/Product"
                address:
                  $ref: "#/components/schemas/Address"
      responses:
        "200":
          description: |
            Order details updated successfully
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags:
        - Orders
      summary: Delete Order
      description: |
        Delete order details from EazyShop
      operationId: deleteOrderDetails
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
      responses:
        "204":
          description: |
            Order details cancelled successfully
        "500":
          $ref: "#/components/responses/InternalServerError"
    get:
      tags:
        - Orders
      summary: Get Order Details
      description: |
        Returns the Order details from EazyShop
      operationId: getOrderDetails
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
      responses:
        "200":
          description: |
            Fetch Order details successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  address:
                    $ref: "#/components/schemas/Address"
              examples:
                order-data:
                  summary: Order example details
                  value:
                    orderId: 1
                    products:
                      - productId: 101
                        name: Apple IPhone 13 Pro
                        price: 999.99
                        categoryName: Mobiles
                        quantity: 96
                      - productId: 102
                        name: Samsung S22 Ultra
                        price: 899.99
                        categoryName: Mobiles
                        quantity: 121
                      - productId: 103
                        name: OnePlus 10 Pro 5G
                        price: 750.99
                        categoryName: Mobiles
                        quantity: 67
                    address:
                      addressLine: |
                        325 N. St. Paul Street,
                        Suite 3100.
                      city: Dallas
                      state: Texas
                      zipcode: "75201"
                      isOfficeAddress: true
        "500":
          $ref: "#/components/responses/InternalServerError"
  /orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Get Order Details
      description: |
        Get order details from EazyShop
      operationId: getOrderDetailsUsingPathParam
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/orderIdPathParam"
      responses:
        "200":
          description: |
            Fetch Order details successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderDetails"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /oneOfOrder:
    post:
      tags:
        - Orders
      summary: Insert OneOf the Order Details
      description: |
        Insert OneOf the Order Details into Eazyshop
      operationId: demoOfOneOf
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: object
                  oneOf:
                    - $ref: "#/components/schemas/Mobile"
                    - $ref: "#/components/schemas/Laptop"
                address:
                  $ref: "#/components/schemas/Address"
              required: [products, address]
      responses:
        "201":
          description: |
            Order placed successfully
  /anyOfOrder:
    get:
      tags:
        - Orders
      summary: Get Order Details
      description: |
        Get Order Details based on Order ID
      operationId: demoOfAnyOf
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
        - name: fetchType
          in: query
          required: true
          schema:
            type: string
            enum:
              - summary
              - details
          description: >
            Fetch Type:
              * `summary` - Will provide Order Summary
              * `details` - Will provide Order Summary & Order Address

      responses:
        "200":
          description: |
            Return product details
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/OrderSummary"
                  - $ref: "#/components/schemas/OrderAddress"

components:
  parameters:
    orderIdQueryParam:
      name: orderId
      in: query
      required: true
      schema:
        type: integer
      example: 1
    orderIdPathParam:
      name: orderId
      in: path
      required: true
      schema:
        type: integer
      example: 1
    categoryIdQueryParam:
      name: categoryId
      in: query
      schema:
        type: integer
        minimum: 100
        maximum: 1000
      examples:
        mobiles:
          summary: Use this example for mobiles
          description: |
            *Smartphones with 5G*
          value: 101
        laptops:
          value: 102
        televisions:
          value: 103
        headphones:
          value: 104
    categoryIdPathParam:
      name: categoryId
      in: path
      required: true
      schema:
        type: integer
        minimum: 100
        maximum: 1000
      example: 102

  schemas:
    Address:
      type: object
      properties:
        addressLine:
          type: string
        city:
          type: string
        state:
          type: string
          enum:
            - California
            - Texas
            - Indiana
            - NewYork
        zipcode:
          type: string
        isOfficeAddress:
          type: boolean
      required: [addressLine, city, state, zipcode]
    Product:
      type: object
      properties:
        productId:
          type: integer
        name:
          type: string
        price:
          type: number
          format: float
        categoryName:
          type: string
          nullable: true
        releaseDate:
          type: string
          format: date
          readOnly: true
        quantity:
          type: integer
          description: |
            ***Quantity*** represents `stock` value when this field is being sent by EazyShop.Where as in the scenarios of consumer sending this feild, it represents `number of product items` inside the order. Consumers are expected to handle the scenario of stopping the end user <u>*when the stock value is 0*</u>
    Category:
      type: object
      properties:
        categoryId:
          type: integer
        name:
          type: string
    Mobile:
      allOf:
        - $ref: "#/components/schemas/Product"
        - type: object
          properties:
            networkType:
              type: string
              enum:
                - 4G
                - 5G
          required: [networkType]
    Laptop:
      allOf:
        - $ref: "#/components/schemas/Product"
        - type: object
          properties:
            ram:
              type: string
              enum:
                - 8 GB
                - 16 GB
                - 32 GB
          required: [ram]
    Order:
      type: object
      properties:
        orderId:
          type: integer
    OrderSummary:
      type: object
      properties:
        products:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/Mobile"
              - $ref: "#/components/schemas/Laptop"
              - $ref: "#/components/schemas/Product"
    OrderAddress:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/Address"
    OrderDetails:
      allOf:
        - $ref: "#/components/schemas/Order"
        - $ref: "#/components/schemas/OrderSummary"
        - $ref: "#/components/schemas/OrderAddress"

  responses:
    InternalServerError:
      description: |
        An error occured while processing the request.
        Please contact <em>support@eazyshop.com</em>

  links:
    GetOrderByOrderId:
      description: >
        The `orderId` value returned in the response can be used as input parameter in `GET /orders`.

      operationId: getOrderDetails
      parameters:
        orderId: "$response.body#/orderId"
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
    oAuth2AuthCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/api/oauth.access
          scopes:
            read: Read only access
            write: Read Write access
            admin: Admin access
